kind: ConfigMap
apiVersion: v1
metadata:
  name: app-config
data:
  app-config.yaml: |
    app:
       # Configurations define above
    argocd:
      appLocatorMethods:
{{- range $item := $.Values.argocd.appLocatorMethods }}
        - type: '{{ $item.type }}'
          instances:
{{- range $item1 := $item.instances }}
            - name: {{ $item1.name }}
              url: {{ $item1.url }}
              password: {{ $item1.token }}
              username: {{ $item1.username }}
{{- end }}
{{- end }}

    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
       {{- range $item := $.Values.clusters }}
            - name: dev-cluster
              url: {{ $item.url }}
              authProvider: "serviceAccount"
              skipTLSVerify: true
              serviceAccountToken: "{{ $item.serviceAccountToken }}"
{{- end }}
      customResources:
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'pipelineruns'
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'taskruns'
    catalog:
      rules:
        - allow: [Component, System, API, Resource, Location, Template]
      locations:
{{- range $item := $.Values.catalog.locations }}
        - target: {{ $item.target }}
          type: {{ $item.type }}
          rules:
{{- range $item1 := $item.rules }}
            - allow: {{ $item1.allow }}
{{- end }}
{{- end }}
      providers:
        ocm:
          env:
            kubernetesPluginRef: dev-cluster
          operate-first:
           {{- range $item := $.Values.clusters }}
            name: dev-cluster
            url:  {{ $item.url }}
            serviceAccountToken: "{{ $item.serviceAccountToken }}"
            skipTLSVerify: true
            authProvider: "serviceAccount"
        gitlab:
          selfHosted:
            host: {{ $.Values.catalog.providers.gitlab.selfHosted.host }}
            schedule: # optional; same options as in TaskScheduleDefinition
              # supports cron, ISO duration, "human duration" as used in code
              frequency: { seconds: 10 }
              # supports ISO duration, "human duration" as used in code
              timeout: { seconds: 60 }
        keycloakOrg:
          default:
            baseUrl: "https://keycloak-rhsso.{{ $.Values.oauth2Proxy.baseUrl }}/auth"
            loginRealm: {{ $.Values.oauth2Proxy.realm }}
            realm: {{ $.Values.oauth2Proxy.realm }}
            clientId: {{ $.Values.oauth2Proxy.clientId }}
            clientSecret: {{ $.Values.oauth2Proxy.clientSecret }}

{{- end }}


    auth:
      environment: development
      providers:
        oauth2Proxy:
          development: {}
  
    integrations:
      gitlab:
{{- range $item := $.Values.integrations.gitlab }}
      - host: {{ $item.host }}
        baseUrl: {{ $item.baseUrl }}
        apiBaseUrl: {{ $item.apiBaseUrl }}
        token: {{ $item.token }}
{{- end }}

    enabled:
      kubernetes: true
      github: false
      argocd: true
      githubOrg: false
      techdocs: false
      ocm: true
      gitlab: true
      keycloak: true

    proxy:
      '/developer-hub':
        target: https://raw.githubusercontent.com/
        pathRewrite:
          '^/api/proxy/developer-hub': /redhat-gpte-devopsautomation/agnosticd_workload_helm_charts/main/rhdh/json/rhdh_home.json
        secure: false
        changeOrigin: true